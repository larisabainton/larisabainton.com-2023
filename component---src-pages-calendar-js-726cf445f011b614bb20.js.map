{"version":3,"file":"component---src-pages-calendar-js-726cf445f011b614bb20.js","mappings":"mIA0DA,IAhCiBA,IAAiC,IAAhC,WAAEC,EAAU,WAAEC,GAAYF,EACxC,OACIG,EAAAA,cAAA,MAAIC,UAAWH,EAAa,oCACvBC,EAAWG,KAAKC,IACb,MAAM,KAAEC,EAAI,KAAEC,EAAI,QAAEC,EAAO,YAAEC,EAAW,aAAEC,GAAiBL,EAE3D,OAAOK,GAAgBA,EAAaN,KAAI,CAAAO,EAA4BC,KAAO,IAAlC,MAAEC,EAAK,UAAEC,EAAS,KAAEC,GAAKJ,EAC9D,OACIT,EAAAA,cAAA,MAAIC,UAAWH,EAAa,yCAA0CgB,IAAKJ,GACvEV,EAAAA,cAAA,OAAKC,UAAU,kCAEfD,EAAAA,cAAA,OAAKC,UAAU,iCAnCvBc,KAChB,MAAMF,EAAO,IAAIG,KAAKD,GAetB,OACIf,EAAAA,cAAA,OAAKC,UAAU,wCACXD,EAAAA,cAAA,OAAKC,UAAU,4CAA4CY,EAAKI,mBAAmB,QAfvE,CAChBC,KAAM,UACNC,MAAO,QACPC,IAAK,UACLC,QAAS,WAYLrB,EAAAA,cAAA,OAAKC,UAAU,6CAA6CY,EAAKS,mBAAmB,QATxE,CAChBC,QAAQ,EACRC,KAAM,UACNC,OAAQ,aAOF,EAgBmBC,CAAWb,GACZb,EAAAA,cAAA,OAAKC,UAAU,6CACXD,EAAAA,cAAA,OAAKC,UAAU,qCAAqCG,GACpDJ,EAAAA,cAAA,OAAKC,UAAU,qCAAqCI,GACpDL,EAAAA,cAAA,OAAKC,UAAU,8BACXD,EAAAA,cAAA,KAAGC,UAAU,YAAY0B,KAAMpB,GAAcD,KAGrDN,EAAAA,cAAA,OAAKC,UAAU,yCACXD,EAAAA,cAAA,KAAGC,UAAU,YAAY0B,KAAMf,GAAYD,KAGlD,GAEX,IAEL,C,6GCNb,UAxCqBd,IAAe,IAAd,KAAE+B,GAAM/B,EAC1B,MAAMgC,EAAiB,GACjBC,EAAa,GAsBnB,OApBAF,EAAKG,mBAAmBC,MAAMC,SAAQC,IAClCA,EAAM1B,aAAayB,SAAQxB,IAAe,IAAd,KAAEI,GAAMJ,EAGhC,GAFyB,IAAIO,KAAKH,GAAMsB,WAAY,IAAInB,MAAOmB,UAAY,EAEtD,CACMN,EAAeO,MAAKC,GAAiBA,EAAcC,KAAOJ,EAAMI,MAGnFT,EAAeU,KAAKL,EAE5B,KAAO,CACoBJ,EAAWM,MAAKC,GAAiBA,EAAcC,KAAOJ,EAAMI,MAG/ER,EAAWS,KAAKL,EAExB,IACF,IAIFlC,EAAAA,cAACwC,EAAAA,EAAM,KACHxC,EAAAA,cAAA,QAAMC,UAAU,iBACZD,EAAAA,cAAA,WACIA,EAAAA,cAAA,OAAKC,UAAU,gCAA+B,mBAC9CD,EAAAA,cAACyC,EAAAA,EAAQ,CAAC3C,WAAW,gBAAgBC,WAAY8B,KAErD7B,EAAAA,cAAA,WACIA,EAAAA,cAAA,OAAKC,UAAU,gCAA+B,eAC9CD,EAAAA,cAACyC,EAAAA,EAAQ,CAAC3C,WAAW,gBAAgBC,WAAY+B,MAGpD,EAMV,MAAMY,EAAOA,IAAM1C,EAAAA,cAAC2C,EAAAA,EAAG,CAACC,MAAO,6B","sources":["webpack://larisa-bainton/./src/components/calendar.jsx","webpack://larisa-bainton/./src/pages/calendar.js"],"sourcesContent":["import React from \"react\";\n\nconst formatDate = (dateString) => {\n    const date = new Date(dateString);\n\n    const dateOptions = {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        weekday: 'short',\n    }\n\n    const timeOptions = {\n        hour12: true,\n        hour: 'numeric',\n        minute: 'numeric',\n    }\n\n    return (\n        <div className=\"calendar_list-item_performances_date\">\n            <div className=\"calendar_list-item_performances_date_mdy\">{date.toLocaleDateString(\"en-US\", dateOptions)}</div>\n            <div className=\"calendar_list-item_performances_date_time\">{date.toLocaleTimeString(\"en-US\", timeOptions)}</div>\n        </div>\n    )\n}\n\nconst Calendar = ({ sourcePage, eventsList }) => {\n    return (\n        <ul className={sourcePage + \"_events_calendar events_calendar\"}>\n            {eventsList.map((eventData) => {\n                const { name, role, company, companyLink, performances } = eventData;\n\n                return performances && performances.map(({ venue, venueLink, date}, i) => {\n                    return (\n                        <li className={sourcePage + \"_calendar_list-item calendar_list-item\"} key={i}>\n                            <div className=\"calendar_list-item_background\">\n                            </div>\n                            <div className=\"calendar_list-item_foreground\">\n                                {formatDate(date)}\n                                <div className=\"calendar_list-item_performances_show-info\">\n                                    <div className=\"calendar_list-item_show-info_name\">{name}</div>\n                                    <div className=\"calendar_list-item_show-info_role\">{role}</div>\n                                    <div className=\"calendar_list-item_company\">\n                                        <a className=\"text-link\" href={companyLink}>{company}</a>\n                                    </div>\n                                </div>\n                                <div className=\"calendar_list-item_performances_venue\">\n                                    <a className=\"text-link\" href={venueLink}>{venue}</a>\n                                </div>\n                            </div>\n                        </li>\n                    )\n                }) \n            })}\n        </ul>\n    )\n}\n\nexport default Calendar;","import React from \"react\"\nimport { graphql } from \"gatsby\";\nimport '../style/main.scss';\n\nimport Layout from \"../components/layout\"\nimport Calendar from \"../components/calendar\";\nimport SEO from \"../components/SEO\"; // eslint-disable-line\n\nconst CalendarPage = ({ data }) => {\n    const upcomingEvents = [];\n    const pastEvents = [];\n\n    data.allContentfulEvent.nodes.forEach(event => {\n        event.performances.forEach(({ date }) => {\n            const isUpcomingEvent = (new Date(date).getTime() - new Date().getTime() > 0)\n\n            if (isUpcomingEvent) {\n                const eventIsInArray = upcomingEvents.find(upcomingEvent => upcomingEvent.id === event.id)\n\n                if (!eventIsInArray) {\n                    upcomingEvents.push(event);\n                }\n            } else {\n                const eventIsInArray = pastEvents.find(upcomingEvent => upcomingEvent.id === event.id)\n\n                if (!eventIsInArray) {\n                    pastEvents.push(event)\n                }\n            }\n        })\n    })\n\n    return (\n        <Layout>\n            <main className=\"calendar-page\">\n                <div>\n                    <div className=\"calendar-page_calendar_title\">Upcoming Events</div>\n                    <Calendar sourcePage=\"calendar-page\" eventsList={upcomingEvents}/>\n                </div>\n                <div>\n                    <div className=\"calendar-page_calendar_title\">Past Events</div>\n                    <Calendar sourcePage=\"calendar-page\" eventsList={pastEvents}/>\n                </div>\n            </main>\n        </Layout>\n    )\n}\n\nexport default CalendarPage;\n\nexport const Head = () => <SEO title= \"Larisa Bainton | Calendar\" /> // eslint-disable-line\n\nexport const query = graphql`\n    query CalendarQuery {\n        allContentfulEvent(sort: {performances: {date: ASC}}) {\n            nodes {\n                company\n                companyLink\n                name\n                id\n                role\n                performances {\n                    date\n                    venue\n                    venueLink\n                    id\n                }\n            }\n        }\n    }`"],"names":["_ref","sourcePage","eventsList","React","className","map","eventData","name","role","company","companyLink","performances","_ref2","i","venue","venueLink","date","key","dateString","Date","toLocaleDateString","year","month","day","weekday","toLocaleTimeString","hour12","hour","minute","formatDate","href","data","upcomingEvents","pastEvents","allContentfulEvent","nodes","forEach","event","getTime","find","upcomingEvent","id","push","Layout","Calendar","Head","SEO","title"],"sourceRoot":""}